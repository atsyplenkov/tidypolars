% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rename.R
\name{pl_rename}
\alias{pl_rename}
\alias{pl_rename_with}
\title{Rename columns}
\usage{
pl_rename(data, ...)

pl_rename_with(data, fn, cols = everything(), ...)
}
\arguments{
\item{data}{A Polars Data/LazyFrame}

\item{...}{For `pl_rename()`, one of the following:
* params like `new_name = "old_name"` to rename selected variables.
* as above but params wrapped in a list

 For `pl_rename_with`, additional arguments passed to `fn`.}

\item{fn}{Function to apply on column names}

\item{cols}{Columns on which to apply `fn`. Can be anything accepted by
`dplyr::select()`.}
}
\description{
Rename columns
}
\examples{
pl_test <- polars::pl$DataFrame(mtcars)

pl_rename(pl_test, miles_per_gallon = "mpg", horsepower = "hp")

pl_rename(pl_test, list(miles_per_gallon = "mpg", horsepower = "hp"))

pl_rename(pl_test, `Miles per gallon` = "mpg", `Horse power` = "hp")

pl_rename_with(pl_test, toupper, cols = contains("p"))

pl_test_2 <- polars::pl$DataFrame(iris)

pl_rename_with(pl_test_2, function(x) tolower(gsub(".", "_", x, fixed = TRUE)))

pl_rename_with(pl_test_2, \(x) tolower(gsub(".", "_", x, fixed = TRUE)))
}
